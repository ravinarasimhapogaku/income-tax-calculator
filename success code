from tkinter import *
from tkinter import ttk
from tkinter import messagebox


def open_new_window():
    new_window = Toplevel(root)
    
def calculate():
    monthly_income = float(monthly_income_entry.get())
    annual_income = monthly_income * 12
    annual_income_label.config(text=f"Annual Income: ₹{annual_income:.2f}")
    
    if annual_income <= 250000:
        tax = 0
    elif annual_income <= 500000:
        tax = (annual_income - 250000) * 0.05
    elif annual_income <= 1000000:
        tax = (annual_income - 500000) * 0.2 + 12500
    else:
        tax = (annual_income - 1000000) * 0.3 + 112500
    
    tax_label.config(text=f"Income Tax: ₹{tax:.2f}")

root = Tk()
root.title("Income Tax Calculator")

monthly_income_label = Label(root, text="Monthly Income (₹):")
monthly_income_label.grid(row=7, column=0)

monthly_income_entry = Entry(root)
monthly_income_entry.grid(row=7, column=1)

calculate_button = Button(root, text="Calculate", command=calculate)
calculate_button.grid(row=1, column=0, columnspan=2)

annual_income_label = Label(root, text="Annual Income: ₹0.00")
annual_income_label.grid(row=2, column=0, columnspan=2)

tax_label = Label(root, text="Income Tax: ₹0.00")
tax_label.grid(row=3, column=0, columnspan=2)




root = Tk()
root.title("User Form")

# Set font
my_font = font.Font(family="Times New Roman", size=16)

# Title label
title_label = Label(root, text="User Form", font=my_font)
title_label.grid(row=0, column=0, columnspan=2)

# Name label and entry
name_label = Label(root, text="Name:", font=my_font)
name_label.grid(row=1, column=0)
name_entry = Entry(root, font=my_font)
name_entry.grid(row=1, column=1)

# Gender label and check buttons
gender_label = Label(root, text="Gender:", font=my_font)
gender_label.grid(row=2, column=0)
male_var = IntVar()
Checkbutton(root, text="Male", variable=male_var, font=my_font).grid(row=2, column=1)
female_var = IntVar()
Checkbutton(root, text="Female", variable=female_var, font=my_font).grid(row=2, column=2)

# State label and option menu

options = [   "select state","Andhra Pradesh",
              "Arunachal Pradesh","Assam","Bihar",
            "Chhattisgarh","Goa","Gujarat","Haryana",
            "Himachal Pradesh","Jharkhand","Karnataka",
            "Kerala","Madhya Pradesh","Maharashtra",
             "Manipur","Meghalaya","Mizoram",
             "Nagaland","Odisha","Punjab",
              "Rajasthan","Sikkim","Tamil Nadu",
               "Telangana","Tripura","Uttar Pradesh",
                "Uttarakhand","West Bengal"]
combobox = ttk.Combobox(root, values=options)
combobox.current(0)
combobox.bind("<<ComboboxSelected>>")
combobox.grid(row=4, column=1)

state_label = Label(root, text="State:", font=my_font)
state_label.grid(row=4, column=0)

# City label and entry
city_label = Label(root, text="City:", font=my_font)
city_label.grid(row=6, column=0)
city_entry = Entry(root, font=my_font)
city_entry.grid(row=6, column=1)




from datetime import datetime

def calculate_age(born):
    today = datetime.now()
    return today.year - born.year - ((today.month, today.day) < (born.month, born.day))

# Age label and entry
Label(root,text="Date of Birth:").grid(row=3,column=0)
dob_entry = Entry(root)
dob_entry.grid(row=3,column=1)



options = ["select occupation", "Agriculture", "public sector", "private sector"]
combobox = ttk.Combobox(root, values=options)
combobox.current(1)
combobox.bind("<<ComboboxSelected>>")
combobox.grid(row=5, column=1)
occupation_label = Label(root, text="Occupation:", font=my_font)
occupation_label.grid(row=5, column=0)

def on_select(event):
    if event.widget.get() == "Agriculture":
        messagebox.showwarning("Warning", "Under Section 10 (1) of the Income Tax Act, 1961, any income generated from any agricultural activities are exempted from being taxed by the Government.")

combobox.bind('<<ComboboxSelected>>', on_select)



# Terms and conditions check button
terms_var = IntVar()
Checkbutton(root,text="I agree to the terms and conditions",variable=terms_var).grid(row=9,columnspan=2)


def reset():
    
    name_entry.delete(0,'end')
    male_var.set(0)
    female_var.set(0)
    state_var.set("select state")
    occupation_var.set("select occupation")
    city_entry.delete(0,'end')
    age_entry.delete(0,'end')
    income_entry.delete(0,'end')
    terms_var.set(0)
    

def submit():
    dob = datetime.strptime(dob_entry.get(), '%d/%m/%Y')
    age = calculate_age(dob)
    if age < 18 or age > 70:
        messagebox.showerror("Error", "Not eligible for income tax guidelines")
        return
    if not name_entry.get():
        messagebox.showerror("Error", "Please enter your name")
        return
   
    if not dob_entry.get():
        messagebox.showerror("Error", "Please enter your date of birth")
        return
    if not terms_var.get():
        messagebox.showerror("Error", "Please agree to the tax rules and regulations")
        return

# Submit button

submit_button = Button(root, text="Submit", command=submit)
submit_button.grid(row=11, column=0, columnspan=2)


# Reset button
reset_button = Button(root,text="Reset",command=reset)
reset_button.grid(row=12,columnspan=2)



root.mainloop()
